#include <iostream>
using namespace std;
void selectionSort(int arr[], int n) {
    // Перебираем все элементы массива, кроме последнего, так как он уже будет отсортирован
    for (int i = 0; i < n - 1; i++) {
        // Предполагаем, что текущий элемент является минимальным
        int min_idx = i;

        // Ищем элемент меньше текущего в остальной части массива
        for (int j = i + 1; j < n; j++) {
            // Если найден элемент, меньший текущего минимума, обновляем индекс минимального элемента
            if (arr[j] < arr[min_idx]) {
                min_idx = j;
            }
        }
        
        // После завершения внутреннего цикла меняем местами текущий элемент и найденный минимальный
        if (min_idx != i) {
            int temp = arr[i];     // Запоминаем текущий элемент
            arr[i] = arr[min_idx]; // Переносим минимальный элемент на текущую позицию
            arr[min_idx] = temp;   // Помещаем текущий элемент на место, откуда взяли минимальный
        }
    }
}

int main() {
    // Объявляем и инициализируем массив для сортировки
    int arr[] = {64, 25, 12, 22, 11};
    int n = sizeof(arr) / sizeof(arr[0]);

    // Выводим массив до сортировки
    cout << "До сортировки: ";
    for (int i = 0; i < n; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;

    // Вызываем функцию сортировки выбором
    selectionSort(arr, n);

    // Выводим массив после сортировки
    cout << "После сортировки: ";
    for (int i = 0; i < n; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;

    return 0;
}